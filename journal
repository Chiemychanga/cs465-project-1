Keep a journal of what worked, what didnâ€™t, what you had to install, issues you ran into, how you fixed those issues, and what you might do differently now that you have more experience.
Include the links to the public GitHub repo and the deployed site in your journal.
-------------------------------------------------------------------------------------

1/8/2020
Starting off with my project, I created a new repo for this project, cs465-project-1. I initialized the repo with a README.md and downloaded a Markdown extension so that I could see what my README.md would look like. In my README.md, I copied the major important things from the requirements so that I could refer to what I needed.

With what I have thus far, I have the basics of a good start. Now I'm writing this journal to think about what I plan on doing next.

Time to brainstorm the 3 major requirements:
 1. an about section or page, with information about myself
    - Hi, my name is Larry Chiem. I am a Computer Science undergraduate at Portland State University, class of 2020. I am a software engineer intern at Intel and specialize more towards development (web and android development). I am also a decent D.I.Y. auto mechanic! Aside from my work, when I play, I like to read, ride my motorcycle, play sports (volleyball, basketball, tennis, dance, mixed-martial arts, snowboard, and more), work on personal android apps, travel, and hanging out with friends doing what we do best - wrecking havoc.
 2. a projects section or page, with projects I have previously worked on
    - NASA Hackathon - Android App
    - Intel projects (CONFIDENTIAL)
    - Tri-met Phone App
    - Pictures of me working on cars
 3. a contact section or page, with the layout contact form (it is not required that you implement the functionality)
    - This is already done from the homework assignment 1.

-------------------------------------------------------------------------------------
To automatically reload the page in my browser when any of these files change, I need to install Node.js live-server.

Here are the instructions from this link, https://gist.github.com/donmccurdy/20fb112949324c92c5e8:

# Installing Node.js live-server

The NodeJS live-server package runs a temporary server displaying any HTML/CSS/JS resources in the current folder. It automatically reloads the page in your browser when any of these files change.

## OS X

+ Verify that Node.js is installed. If you see anything when you run `which npm` in a terminal, it is. If not, follow the instructions at [nodejs.org](https://nodejs.org/en/) to install.
+ Install live-server: `npm install -g live-server`
+ Move your terminal to where your pages live: `cd <path-to-content>`
+ Start the server: `live-server .`
+ Open [localhost:8080](localhost:8080) in a browser.

## Windows

## Linux

-------------------------------------------------------------------------------------
Now that I have live-server running as per instructions above:

 [ x ] I want to test that a change in the index.html will reflect automatically.
 [ x ] an about me;
 [ x ] a projects section or page;
 [ x ] a contact section or page


1/16/2020
I went into my personal projects, used QuickTime Player's screen recording to record some footage of my apps running.
I then used https://ezgif.com/video-to-gif to transform the video to gif format to be used as animated pictures on my portfolio gallery.
I was struggling at one point in trying to get all of the images for the projects to the same size, so I just set the width of the img tags
to a specific pixel and was happy with the results...until I added a bigger picture and then the width was bigger (the snake game picture). I'm
not sure what to do here yet.

1/18/2020
I want the UX of any clickable buttons to be noticably clickable...So today I played with the :hover and :active and :visited css styling attributes on anchor tags
to really highlight the UX of what is clickable and what is not.

I then started adding links to my accounts, such as:
    - a link to my Gmail that would open up a new email template via Gmail to my Gmail.
    - a link to my GitHub account
    - a link to my LinkedIn

1/22
I added a background image to my header and was having a difficult time getting the background image to be responsive and to fill up the
full width of the header. Also, the content in the header, like my <ul class="topnav"> wasn't exactly centered as I'd like. I couldn't figure out
what to do with this because text-align: center wouldn't do the job. Actually, the whole website wasn't responsive and was not centered.

At this time, I needed to consider how to make everything more centered especially how to make it responsive and streamline. It needed
to be easy on the eyes when looking on the Desktop and also when looking on a smartphone.

1/25
In order to make things responsive/fluid, I began researching about CSS3 flexbox and began applying it to my project.
It was a little difficult to understand, but now that I do, next time when I start working on a project from fresh,
I definitely need to start with responsiveness in mind. A first question would be do I want my website to be mobile-responsive first or
desktop-responsive first. Everyone uses their phones now to look at websites, plus it's a lot easier to be mobile-first and then
style the page for desktop as it is much more complex to style from desktop to mobile.


1/27
Viewing my website on mobile for some reason does not show everything width wise, so I have to zoom out and then it looked fine.
So I'm going to start over on my styling and focus on making it mobile-first friendly.

https://internetingishard.com/html-and-css/responsive-design/